run_app()
devtools::load_all(".")
run_app()
shapiro.test(rnorm(50))
shapiro.test(rnorm(50)) %>% str
shapiro.test(rnorm(50))$statistic
shapiro.test(rnorm(50))$p-value
shapiro.test(rnorm(50))$p.value
?shapiro.test
shapiro.test(rnorm(50))$statistic[1]
shapiro.test(rnorm(50))$statistic[[1]]
#' Shapiro-Wilk test data
#'
#' A dataset with 11 values of men weights expressed in pounds.
#' The dataset is provided for testing the results of \code{fct_shapiro}.
#'
#' @format a vector with 11 numerical elements.
#'
#' @name shapiro_reference
#' @docType data
#' @author S. S. Shapiro
#' @author M. B. Wilk
#' @source An analysis of variance test for normality (complete samples),
#'  Biometrika (1965), 52, 3 and 2, p. 591.
#'  Section 4 - Examples, pag. 606, Example 1.
#'  \url{http://links.jstor.org/sici?sici=0006-3444%28196512%2952%3A3%2F4%3C591%3AAAOVTF%3E2.0.CO%3B2-B}
#' @keywords data
shapirotest_reference <- c(148, 154, 158, 160, 161, 162, 166, 170, 182, 195, 236)
usethis::use_data(shapirotest_reference, overwrite = TRUE)
shapirotest_reference
devtools::load_all(".")
fct_shapiro(shapirotest_reference)
fct_shapiro(shapirotest_reference)$pvalue %>% round(2)
fct_shapiro(shapirotest_reference)$pvalue %>% round(3)
devtools::load_all(".")
devtools::load_all(".")
run_app()
shapirotest_reference %>% mean
lapply(levels(tomato_yields$fertilizer), function(x) {
tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro %>%
list(name = x,
W = .$W,
pvalue = .$pvalue)
})
lapply(levels(tomato_yields$fertilizer), function(x) {
tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro %>%
list(name = x,
W = .$W,
pvalue = .$pvalue, result = .$result)
})
a<-lapply(levels(tomato_yields$fertilizer), function(x) {
tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro %>%
list(name = x,
W = .$W,
pvalue = .$pvalue, result = .$result)
})
a
str(a)
rm(a)
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
list(name = x,
W = shapiro_output$W,
pvalue = shapiro_output$pvalue,
result = shapiro_output$result)
})
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
list(name = x,
W = shapiro_output$W,
pvalue = shapiro_output$pvalue,
result = shapiro_output$result)
})[[2]]
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
list(name = x,
W = shapiro_output$W,
pvalue = shapiro_output$pvalue,
result = shapiro_output$result)
})[[2]]$name
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
list(name = x,
W = shapiro_output$W,
pvalue = shapiro_output$pvalue,
result = shapiro_output$result)
})[[2]]$W
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
list(name = x,
W = shapiro_output$W,
pvalue = shapiro_output$pvalue,
result = shapiro_output$result)
})[[2]]$result
devtools::load_all(".")
run_app()
shapiro_text <- "<b>Gruppo</b> %s: %s (W = %.3f, <i>p</i>-value = %.4f </br>"
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
sprintf(shapiro_text,
x,
shapiro_output$result,
shapiro_output$W,
shapiro_output$pvalue)
})
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
sprintf(shapiro_text,
x,
shapiro_output$result,
shapiro_output$W,
shapiro_output$pvalue)
}) %>% unlist
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
sprintf(shapiro_text,
x,
shapiro_output$result,
shapiro_output$W,
shapiro_output$pvalue)
}) %>% unlist %>% paste
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
sprintf(shapiro_text,
x,
shapiro_output$result,
shapiro_output$W,
shapiro_output$pvalue)
}) %>% unlist %>% unlist()
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
sprintf(shapiro_text,
x,
shapiro_output$result,
shapiro_output$W,
shapiro_output$pvalue)
}) %>% unlist %>% paste
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
sprintf(shapiro_text,
x,
shapiro_output$result,
shapiro_output$W,
shapiro_output$pvalue)
}) %>% lapply(paste)
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
sprintf(shapiro_text,
x,
shapiro_output$result,
shapiro_output$W,
shapiro_output$pvalue)
}) %>% lapply(function(x) unlist(x) %>% paste)
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
sprintf(shapiro_text,
x,
shapiro_output$result,
shapiro_output$W,
shapiro_output$pvalue)
})
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
sprintf(shapiro_text,
x,
shapiro_output$result,
shapiro_output$W,
shapiro_output$pvalue)
})
a <- c("a", "b", "c")
paste0(a)
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
sprintf(shapiro_text,
x,
shapiro_output$result,
shapiro_output$W,
shapiro_output$pvalue)
}) %>% sapply(paste)
lapply(levels(tomato_yields$fertilizer), function(x) {
shapiro_output <- tomato_yields[fertilizer == x, pounds] %>%
fct_shapiro
sprintf(shapiro_text,
x,
shapiro_output$result,
shapiro_output$W,
shapiro_output$pvalue)
}) %>% unlist %>% sapply(paste)
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
paste("a", list("c", "d"))
?paste
paste("a", list("c", "d"), recycle0 = TRUE)
paste("a", c("c", "d"), recycle0 = TRUE)
paste("a", paste(c("c", "d")))
paste(c("c", "d")))
paste(c("c", "d"))
paste0(c("c", "d"))
paste(c("c", "d"), collapse = "")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
setdiff(5, 7)
?setdiff
setdiff(c(5,7), 5)
setdiff(7, 7)
5 %in% 1:10
1:10 %in% 5
1:10 %in% NA
?inherits()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::test_coverage()
rowsummary(tomato_yields, "pounds", "fertilizer")
devtools::test_coverage()
devtools::load_all(".")
devtools::test_coverage()
golem::add_module(name = "save", with_test = TRUE) # Name of the module
sapply(list(c("a", "b"), list(NULL))
)
sapply(list(c("a", "b"), function(x) list(NULL)))
sapply(list(c("a", "b")), function(x) list(NULL))
sapply(list("a", "b"), function(x) list(NULL))
a<-sapply(list("a", "b"), function(x) list(NULL))
a
a[["a"]]
a[["b"]]
a[["c"]]
a<-sapply(list("a", "b"), function(x) list(name = x))
a
a$name
a$name[2]
a$name[3]
a$name[1]
a[1]$name
a[2]$name
str(a)
a[["a"]]
a[[a]]
a["a"]
a[a]
lapply(a, function(x) x$name)
lapply(a, function(x) x)
a<-sapply(list("a", "b"), function(x) list(x$name = x))
a<-sapply(list("a", "b"), function(x) list(x$name))
a<-sapply(list("a", "b"), function(x) x)
a
a<-sapply(list("a", "b"), function(x) list(ciao = NULL))
a
a<-sapply(list("a", "b"), function(x) list(ciao = NULL, miao = NULL))
a
a<-sapply(list("a", "b"), function(x) list("ciao" = NULL, "miao" = NULL))
a
a<-sapply(list("a"), function(x) list("ciao" = NULL, "miao" = NULL))
a
a<-sapply(list("a", "b"), function(x) list("ciao" = NULL, "miao" = NULL), simplify = FALSE)
a
a[["a"]]
a[["a"]]$ciao
rm(a)
a[["a"]]$ciao
a <- list()
a[["a"]]$ciao
rm(a)
a <- list()
a[["a"]]$ciao
a
a[["a"]]$ciao <- "pippo"
a
a[["a"]]$ciao <- list()
a
a[["a"]] <- list()
a
devtools::load_all(".")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
devtools::load_all(".")
run_app()
?toupper
?geom_boxplot
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
gsub("[()\\[\\]]", "", "", perl = TRUE)
gsub("[()\\[\\]]", "", NULL, perl = TRUE)
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
?ggplot2::theme
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
usethis::use_package("ggplot2")
devtools::load_all(".")
run_app()
package_version("comparat")
package_version()
packageVersion("comparat")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
a <- c(FALSE, TRUE, TRUE, FALSE)
gsub("TRUE", "sì", a)
a <- gsub("TRUE", "sì", a)
a <- gsub(FALSE, "no", a)
a
a <- gsub("pippo", "no", a)
a
a <- c(FALSE, TRUE, TRUE, FALSE)
a <- gsub("FALSE", "no", a)
a
rm(a)
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
?multissession
??multissession
devtools::load_all(".")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
a - letters[5]
a - letters[1:5]
a <- letters[1:5]
a
NULL %in% a
a
ifelse(NULL %in% a, "sì", "no")
ifelse("a" %in% a, "sì", "no")
ifelse(NULL %in% a, "sì", "no")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
promises::future_promise()
?promises::future_promise()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
usethis::use_test("app_server")
usethis::use_test("app_ui")
devtools::test_coverage()
devtools::load_all(".")
run_app()
library(comparat)
devtools::load_all(".")
