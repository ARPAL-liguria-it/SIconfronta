runApp()
usethis:::use_codecov_badge()
?usethis:::use_codecov_badge()
?usethis:::use_codecov_badge
??usethis:::use_codecov_badge
??usethis::use_codecov_badge
?usethis::use_codecov_badge
usethis::use_codecov_badge()
?usethis::use_github_actions_badge()
usethis::use_github_actions_badge("test-coverage.yaml")
usethis::use_github_actions_badge("R-CMD-check.yaml")
git push --set-upstream origin master
usethis::use_github_actions_badge("check-standard.yaml")
usethis::use_github_actions_badge("check-standard.yaml")
?usethis::use_coverage()
runApp()
runApp()
library(comparat)
runApp()
shiny::runApp()
shiny::runApp()
system.file("rmd", "logo.pdf",
package = "comparat")
shiny::runApp()
shiny::runApp()
shiny::runApp()
grubbs.test
?grubbs.test
??grubbs.test
fct_grubbs <- function(x) {
stopifnot(
is.vector(x),
is.numeric(significance),
isTRUE(significance > 0 & significance < 1)
)
outliers <- NULL
test <- x
grubbs.result <- grubbs.test(test)
pv <- grubbs.result$p.value
while(pv < 1-significance) {
outliers <- c(outliers,as.numeric(strsplit(grubbs.result$alternative," ")[[1]][3]))
test <- x[!x %in% outliers]
grubbs.result <- grubbs.test(test)
pv <- grubbs.result$p.value
}
ifelse(length(outliers) == 0,
"nessun valore anomalo",
paste0(length(outliers), " valori anomali (", outliers, ")")
)
}
fct_grubbs(mtcars$mpg)
fct_grubbs(mtcars$mpg, 0.95)
fct_grubbs(mtcars$mpg, significance0.95)
fct_grubbs(mtcars$mpg, significance = 0.95)
fct_grubbs <- function(x, significance) {
stopifnot(
is.vector(x),
is.numeric(significance),
isTRUE(significance > 0 & significance < 1)
)
outliers <- NULL
test <- x
grubbs.result <- grubbs.test(test)
pv <- grubbs.result$p.value
while(pv < 1-significance) {
outliers <- c(outliers,as.numeric(strsplit(grubbs.result$alternative," ")[[1]][3]))
test <- x[!x %in% outliers]
grubbs.result <- grubbs.test(test)
pv <- grubbs.result$p.value
}
ifelse(length(outliers) == 0,
"nessun valore anomalo",
paste0(length(outliers), " valori anomali (", outliers, ")")
)
}
fct_grubbs(mtcars$mpg, significance = 0.95)
fct_grubbs <- function(x, significance) {
stopifnot(
is.vector(x),
is.numeric(significance),
isTRUE(significance > 0 & significance < 1)
)
outvalues <- NULL
test <- x
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
while(pv < 1-significance) {
outvalues <- c(outliers, as.numeric(strsplit(grubbs_result$alternative," ")[[1]][3]))
test <- x[!x %in% outliers]
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
}
ifelse(length(outvalues) == 0,
"nessun valore anomalo",
paste0(length(outvalues), " valori anomali (", outvalues, ")")
)
}
fct_grubbs(mtcars$mpg, significance = 0.95)
mtcars
fct_grubbs(mtcars$disp, significance = 0.95)
fct_grubbs(mtcars$hp, significance = 0.95)
fct_grubbs(c(rnorm(10), 3), significance = 0.95)
fct_grubbs(c(rnorm(10), 5), significance = 0.95)
fct_grubbs <- function(x, significance) {
stopifnot(
is.vector(x),
is.numeric(significance),
isTRUE(significance > 0 & significance < 1)
)
outvalues <- NULL
test <- x
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
while(pv < 1-significance) {
outvalues <- c(outvalues, as.numeric(strsplit(grubbs_result$alternative," ")[[1]][3]))
test <- x[!x %in% outvalues]
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
}
ifelse(length(outvalues) == 0,
"nessun valore anomalo",
paste0(length(outvalues), " valori anomali (", outvalues, ")")
)
}
fct_grubbs(c(rnorm(10), 5), significance = 0.95)
fct_grubbs(c(rnorm(10), 6), significance = 0.95)
fct_grubbs(c(rnorm(10), 6, 7), significance = 0.95)
fct_grubbs(c(rnorm(10), 6, 7), significance = 0.95)
fct_grubbs(c(rnorm(10), 6, 8), significance = 0.95)
rnorm(10)
?switch
fct_grubbs <- function(x, significance) {
stopifnot(
is.vector(x),
is.numeric(significance),
isTRUE(significance > 0 & significance < 1)
)
outvalues <- NULL
test <- x
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
while(pv < 1-significance) {
outvalues <- c(outvalues, as.numeric(strsplit(grubbs_result$alternative," ")[[1]][3]))
test <- x[!x %in% outvalues]
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
}
switch(length(outvalues),
0 = "nessun valore anomalo",
fct_grubbs <- function(x, significance) {
stopifnot(
is.vector(x),
is.numeric(significance),
isTRUE(significance > 0 & significance < 1)
)
outvalues <- NULL
test <- x
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
while(pv < 1-significance) {
outvalues <- c(outvalues, as.numeric(strsplit(grubbs_result$alternative," ")[[1]][3]))
test <- x[!x %in% outvalues]
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
}
switch(length(outvalues),
0 = "nessun valore anomalo",
switch (length(rnorm(1)),
1 = 1
switch (length(rnorm(1)),
1
)
switch (length(rnorm(1)),
1 : 1
)
switch (length(rnorm(2)),
1 : 1
)
fct_grubbs <- function(x, significance) {
stopifnot(
is.vector(x),
is.numeric(significance),
isTRUE(significance > 0 & significance < 1)
)
outvalues <- NULL
test <- x
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
while(pv < 1-significance) {
outvalues <- c(outvalues, as.numeric(strsplit(grubbs_result$alternative," ")[[1]][3]))
test <- x[!x %in% outvalues]
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
}
switch(length(outvalues),
0 : "nessun valore anomalo",
1 : paste0(length(outvalues), " valore anomalo (", outvalues, ")"),
paste0(length(outvalues), " valori anomali (", outvalues, ")")
)
}
fct_grubbs(c(rnorm(10), 6, 8), significance = 0.95)
fct_grubbs <- function(x, significance) {
stopifnot(
is.vector(x),
is.numeric(significance),
isTRUE(significance > 0 & significance < 1)
)
outvalues <- NULL
test <- x
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
while(pv < 1-significance) {
outvalues <- c(outvalues, as.numeric(strsplit(grubbs_result$alternative," ")[[1]][3]))
test <- x[!x %in% outvalues]
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
}
if (length(outvalues) == 0){
"nessun valore anomalo"
} else if (length(outvalues) == 1){
paste0(length(outvalues), " valore anomalo (", outvalues, ")")
} else {
paste0(length(outvalues), " valori anomali (", outvalues, ")")
}
}
fct_grubbs(c(rnorm(10), 6, 8), significance = 0.95)
?paste0
fct_grubbs <- function(x, significance) {
stopifnot(
is.vector(x),
is.numeric(significance),
isTRUE(significance > 0 & significance < 1)
)
outvalues <- NULL
test <- x
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
while(pv < 1-significance) {
outvalues <- c(outvalues, as.numeric(strsplit(grubbs_result$alternative," ")[[1]][3]))
test <- x[!x %in% outvalues]
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
}
if (length(outvalues) == 0){
"nessun valore anomalo"
} else if (length(outvalues) == 1){
paste0(length(outvalues), " valore anomalo (", outvalues, ")")
} else {
paste0(length(outvalues), " valori anomali (", paste0(outvalues, sep = ", "), ")")
}
}
fct_grubbs(c(rnorm(10), 6, 8), significance = 0.95)
fct_grubbs <- function(x, significance) {
stopifnot(
is.vector(x),
is.numeric(significance),
isTRUE(significance > 0 & significance < 1)
)
outvalues <- NULL
test <- x
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
while(pv < 1-significance) {
outvalues <- c(outvalues, as.numeric(strsplit(grubbs_result$alternative," ")[[1]][3]))
test <- x[!x %in% outvalues]
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
}
print(outvalues)
print(str(outvalues))
if (length(outvalues) == 0){
"nessun valore anomalo"
} else if (length(outvalues) == 1){
paste0(length(outvalues), " valore anomalo (", outvalues, ")")
} else {
paste0(length(outvalues), " valori anomali (", paste0(outvalues, sep = ", "), ")")
}
}
fct_grubbs(c(rnorm(10), 6, 8), significance = 0.95)
paste0(c(8,6))
paste0(c(8,6), collapse = ",")
fct_grubbs <- function(x, significance) {
stopifnot(
is.vector(x),
is.numeric(significance),
isTRUE(significance > 0 & significance < 1)
)
outvalues <- NULL
test <- x
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
while(pv < 1-significance) {
outvalues <- c(outvalues, as.numeric(strsplit(grubbs_result$alternative," ")[[1]][3]))
test <- x[!x %in% outvalues]
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
}
print(outvalues)
print(str(outvalues))
if (length(outvalues) == 0){
"nessun valore anomalo"
} else if (length(outvalues) == 1){
paste0(length(outvalues), " valore anomalo (", outvalues, ")")
} else {
paste0(length(outvalues), " valori anomali (", paste0(outvalues, collapse = ", "), ")")
}
}
paste0(c(8,6), collapse = ",")
fct_grubbs(c(rnorm(10), 6, 8), significance = 0.95)
fct_grubbs(c(rnorm(10), 6, 8, 15), significance = 0.95)
X <- c(152.36,130.38,101.54,96.26,88.03,85.66,83.62,76.53,
74.36,73.87,73.36,73.35,68.26,65.25,63.68,63.05,57.53)
fct_grubbs(X, significance = 0.95)
fct_grubbs(mtcars$mpg, significance = 0.95)
usethis::use_package("outliers")
data.table(mpg)
data.table::data.table(mpg)
data.table::data.table(mtcars)
fct_grubbs <- function(x, significance) {
stopifnot(
is.vector(x),
is.numeric(significance),
isTRUE(significance > 0 & significance < 1)
)
outvalues <- NULL
test <- x
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
while(pv < 1-significance) {
outvalues <- c(outvalues, as.numeric(strsplit(grubbs_result$alternative," ")[[1]][3]))
test <- x[!x %in% outvalues]
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
}
if (length(outvalues) == 0){
"nessun valore anomalo"
} else if (length(outvalues) == 1){
paste0(length(outvalues), " valore anomalo (", outvalues, ")")
} else {
paste0(length(outvalues), " valori anomali (", paste0(outvalues, collapse = ", "), ")")
}
}
data.table::data.table(mtcars) %>% fct_grubbs(mpg, significance = 0.95)
fct_grubbs(mpg, significance = 0.95)
fct_grubbs <- function(x, significance = 0.95) {
stopifnot(
is.vector(x),
is.numeric(significance),
isTRUE(significance > 0 & significance < 1)
)
outvalues <- NULL
test <- x
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
while(pv < 1-significance) {
outvalues <- c(outvalues, as.numeric(strsplit(grubbs_result$alternative," ")[[1]][3]))
test <- x[!x %in% outvalues]
grubbs_result <- outliers::grubbs.test(test)
pv <- grubbs_result$p.value
}
if (length(outvalues) == 0){
"nessun valore anomalo"
} else if (length(outvalues) == 1){
paste0(length(outvalues), " valore anomalo (", outvalues, ")")
} else {
paste0(length(outvalues), " valori anomali (", paste0(outvalues, collapse = ", "), ")")
}
}
fct_grubbs(mpg, significance = 0.95)
fct_grubbs(mtcars$mpg, significance = 0.95)
library(comparat)
outliers::grubbs.test(rnorm(10))
?outliers::grubbs.test
outliers::grubbs.test(rnorm(10))
rnorm(10)
a <- rnorm(10)
outliers::grubbs.test(a)
a
boxplot(a)
a <- c(a, 5)
boxplot(a)
outliers::grubbs.test(a)
a <- c(a, 5)
boxplot(a)
outliers::grubbs.test(a)
a <- c(a, -5)
boxplot(a)
outliers::grubbs.test(a)
comparat::fct_grubbs(a)
a
outliers::grubbs.test(a, type = 10)
outliers::grubbs.test(a, type = 11)
outliers::grubbs.test(a, type = 12)
outliers::grubbs.test(a, type = 20)
a
a[11] <- NULL
a[1:10,12]
a[c(1:10,12)]
a[c(1:10,12:13)]
a <-a[c(1:10,12:13)]
outliers::grubbs.test(a, type = 20)
outliers::grubbs.test(a, type = 12)
outliers::grubbs.test(a, type = 11)
outliers::grubbs.test(a, type = 10)
comparat::fct_grubbs(a)
comparat::fct_grubbs(a, significance = 0.90)
a
a[12]
a[12] <- -5.2
a
outliers::grubbs.test(a, type = 10)
a[12] <- -5.5
outliers::grubbs.test(a, type = 10)
outliers::grubbs.test(a, type = 12)
outliers::grubbs.test(a, type = 11)
comparat::fct_grubbs(a, significance = 0.90)
comparat::fct_grubbs(a, significance = 0.95)
outliers::grubbs.test(a, type = 12)$G
outliers::grubbs.test(a, type = 12)$statistic
outliers::grubbs.test(a, type = 12)$statistic
outliers::grubbs.test(a, type = 12)
outliers::grubbs.test(a, type = 20)$statistic
outliers::grubbs.test(rnorm(10), type = 20)$statistic
outliers::grubbs.test(rnorm(10), type = 10)$statistic
outliers::grubbs.test(rnorm(10), type = 10)$statistic$G
outliers::grubbs.test(rnorm(10), type = 10)$statistic[1]
outliers::grubbs.test(rnorm(10), type = 10)$statistic[[1]]
outliers::grubbs.test(mtcars$mpg, type = 10)$statistic[[1]]
outliers::grubbs.test(mtcars$mpg, type = 10)$statistic[1]
max(c(NULL, 2))
min(c(NULL, 2))
library(comparat)
outliers::grubbs.test(mtcars$mpg, type = 10)
comparat::fct_grubbs(mtcars$mpg, significance = 0.95)
comparat::fct_grubbs(mtcars$mpg, significance = 0.95)
mtcars$mpg
c(mtcars$mpg, 30.5)
outliers::grubbs.test(c(mtcars$mpg, 30.5), type = 10)
outliers::grubbs.test(c(mtcars$mpg, 40.5), type = 10)
comparat::fct_grubbs(c(mtcars$mpg, 40.5), significance = 0.95)
library(comparat)
comparat::fct_grubbs(c(mtcars$mpg, 40.5), significance = 0.95)
comparat::fct_grubbs(mtcars$mpg, significance = 0.95)
sprintf(%.3f, 0.55551)
sprintf("%.3f", 0.55551)
sprintf("%.3f", 0.055551)
sprintf("%.3f", 0.0055551)
sprintf("%.3s", 0.0055551)
sprintf("%.3g", 0.0055551)
sprintf("%.3s", 0.00055551)
sprintf("%.3g", 0.00055551)
sprintf("%.3g", 0.00000055551)
sprintf("%.3g", 0.000055551)
sprintf("%.3g", 0.00055551)
sprintf("%.3g", 2.921271)
sprintf("%.3f", 2.921271)
library(comparat)
comparat::fct_grubbs(c(mtcars$mpg, 40.5), significance = 0.95)
comparat::fct_grubbs(c(mtcars$mpg), significance = 0.95)
comparat::fct_grubbs(c(mtcars$mpg, 40.5, -42), significance = 0.95)
comparat::fct_grubbs(c(mtcars$mpg, 40.5, 5), significance = 0.95)
comparat::fct_grubbs(c(mtcars$mpg, 40.5, 4), significance = 0.95)
comparat::fct_grubbs(c(mtcars$mpg, 40.5, 3), significance = 0.95)
comparat::fct_grubbs(c(mtcars$mpg, 40.5, 2), significance = 0.95)
comparat::fct_grubbs(c(mtcars$mpg, 40.5, 2), significance = 0.95)
mtcars$mpg
outliers::grubbs.test(c(mtcars$mpg, 40.5, 2))
outliers::grubbs.test(c(mtcars$mpg, 40.5, 2), type = 12)
outliers::grubbs.test(c(mtcars$mpg, 40.5, 2), type = 1)
outliers::grubbs.test(c(mtcars$mpg, 40.5, 2), type = 11)
outliers::grubbs.test(c(mtcars$mpg, 40.5, 5), type = 11)
outliers::grubbs.test(c(mtcars$mpg, 40.5, 2), type = 11)
outliers::grubbs.test(c(mtcars$mpg, 40.5, 2), type = 20)
outliers::grubbs.test(c(mtcars$mpg, 40.5), type = 20)
outliers::grubbs.test(c(mtcars$mpg, 40.5), type = 12)
outliers::grubbs.test(c(mtcars$mpg, 40.5), type = 11)
outliers::grubbs.test(c(mtcars$mpg, 40.5,6), type = 11)
outliers::grubbs.test(c(mtcars$mpg, 40.5,5), type = 11)
outliers::grubbs.test(c(mtcars$mpg, 40.5,4), type = 11)
comparat::fct_grubbs(c(mtcars$mpg, 40.5, 4), significance = 0.95)
comparat::fct_grubbs(c(mtcars$mpg, 40.5, 3), significance = 0.95)
outliers::grubbs.test(c(mtcars$mpg, 40.5,3), type = 11)
outliers::grubbs.test(c(mtcars$mpg, 40.5,2), type = 11)
comparat::fct_grubbs(c(mtcars$mpg, 40.5, 2), significance = 0.95)
comparat::fct_grubbs(c(mtcars$mpg, 40.5, 1), significance = 0.95)
comparat::fct_grubbs(c(mtcars$mpg, 40.5, 0), significance = 0.95)
comparat::fct_grubbs(c(mtcars$mpg, 40.5, -2), significance = 0.95)
comparat::fct_grubbs(c(mtcars$mpg, 40.5, -1), significance = 0.95)
comparat::fct_grubbs(c(mtcars$mpg, 40.5, -2), significance = 0.95)
outliers::grubbs.test(c(mtcars$mpg, 40.5,-2), type = 11)
g10 <- outliers::grubbs.test(c(mtcars$mpg, 40.5,-2), type = 10)
g11 <- outliers::grubbs.test(c(mtcars$mpg, 40.5,-2), type = 11)
g20 <- outliers::grubbs.test(c(mtcars$mpg, 40.5,-2), type = 20)
list(g10, g11)
list(g10=g10, g11=g11)
glist <- list(g10=g10, g11=g11)
sapply(glist, function(x) x$p.value)
sapply(glist, function(x) which(min(x$p.value)))
sapply(glist, function(x) x[min(x$p.value)])
sapply(glist, function(x) min(x$p.value))
sapply(glist, function(x) x$p.value)
sapply(glist, function(x) `[` x$p.value)
sapply(glist, function(x) `[`,x$p.value)
sapply(glist, function(x) `[`)
sapply(glist, function(x) `[`, p.value)
sapply(glist, function(x) `[`, "p.value")
sapply(glist, function(x) min(x$p.value))
sapply(glist, function(x) x$p.value)
min(sapply(glist, function(x) x$p.value))
which.min(sapply(glist, function(x) x$p.value))
glist[which.min(sapply(glist, function(x) x$p.value))]
glist[[which.min(sapply(glist, function(x) x$p.value))]]
