devtools::load_all(".")
rowsummary_2samples(tomato_yields, response = "pounds", group = "fertilizer", udm = "pd")
devtools::load_all(".")
devtools::load_all(".")
rowsummary_2samples(tomato_yields, response = "pounds", group = "fertilizer", udm = "pd")
devtools::load_all(".")
rowsummary_2samples(tomato_yields, response = "pounds", group = "fertilizer", udm = "pd")
devtools::load_all(".")
rowsummary_2samples(tomato_yields, response = "pounds", group = "fertilizer", udm = "pd")
tomato_yields
tomato_yields[, lapply(parameter, paste0(x, "o"))]
tomato_yields[, lapply(.SD, paste0(x, "o"))]
tomato_yields[, lapply(.SD, paste0(.SD, "o"))]
tomato_yields[, lapply(.I, paste0(.SD, "o"))]
tomato_yields[, lapply(.I, paste0(x, "o"))]
tomato_yields[, lapply(.I, (\(x) paste0(x, "o")))]
tomato_yields[, lapply(parameter, (\(x) paste0(x, "o")))]
tomato_yields[, lapply(pounds, (\(x) paste0(x, "o")))]
tomato_yields[, ciccio := lapply(pounds, (\(x) paste0(x, "o")))]
tomato_yields[, ciccio := lapply(pounds, (\(x) paste0(x, "o")))][]
tomato_yields[, parameter := lapply(pounds, (\(x) paste0(x, "o")))][]
devtools::load_all(".")
rowsummary_2samples(tomato_yields, response = "pounds", group = "fertilizer", udm = "pd")
devtools::load_all(".")
rowsummary_2samples(tomato_yields, response = "pounds", group = "fertilizer", udm = "pd")
devtools::load_all(".")
rowsummary_2samples(tomato_yields, response = "pounds", group = "fertilizer", udm = "pd")
rowsummary_2samples(tomato_yields, response = "pounds", group = "fertilizer", udm = "pd")[]
devtools::load_all(".")
rowsummary_2samples(tomato_yields, response = "pounds", group = "fertilizer", udm = "pd")[]
devtools::load_all(".")
rowsummary_2samples(tomato_yields, response = "pounds", group = "fertilizer", udm = "pd")[]
devtools::load_all(".")
rowsummary_2samples(tomato_yields, response = "pounds", group = "fertilizer", udm = "pd")[]
max(rnorm(20), na.rm = TRUE) |> signiftodigits(signif = 3L)
max(rnorm(20), na.rm = TRUE)
max(rnorm(20), na.rm = TRUE) |> signiftodigits(signif = 4L)
signiftodigits(5, 4L)
sprintf("%.*f", signiftodigits(5, 4L), 5)
devtools::load_all(".")
rowsummary_2samples(tomato_yields, response = "pounds", group = "fertilizer", udm = "pd")[]
devtools::load_all(".")
rowsummary_2samples(tomato_yields, response = "pounds", group = "fertilizer", udm = "pd")[]
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
rowsummary_2samples(tomato_yields, "pounds", "fertilizer", "kg")$statistica
rowsummary_2samples(tomato_yields, "pounds", "fertilizer", "kg")
rowsummary_2samples(tomato_yields, "pounds", "fertilizer", "kg")[]
rowsummary_2samples(tomato_yields, "pounds", "fertilizer", "kg")
rowsummary_2samples(tomato_yields, "pounds", "fertilizer", "kg")$statistica |> unlist()
devtools::load_all(".")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
tomato_yields$pounds |> fct_shapiro()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
lvl()
selected_data()
input_data()
key()
rownumber()
r$compare03x
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
lvl
lvl()
selected_data()
selected_data()$group
sapply(lvl(), function(x) {
shapiro_output <- selected_data()[which(selected_data()$group == x)] |>
fct_shapiro()
sprintf(shapiro_text,
x,
shapiro_output$result,
shapiro_output$W,
shapiro_output$pvalue)
})
sapply(lvl(), function(x) {
shapiro_output <- selected_data()[which(selected_data()$group == x)] |>
fct_shapiro()
})
sapply(lvl(), function(x) {
shapiro_output <- selected_data()[which(selected_data()$group == x)]
})
selected_data()[which(selected_data()$group == "monte")]
selected_data()[which(selected_data()$group == "monte"),]
sapply(lvl(), function(x) {
shapiro_output <- selected_data()[which(selected_data()$group == x),] |>
fct_shapiro()
sprintf(shapiro_text,
x,
shapiro_output$result,
shapiro_output$W,
shapiro_output$pvalue)
})
sapply(lvl(), function(x) {
shapiro_output <- selected_data()[which(selected_data()$group == x),response] |>
fct_shapiro()
sprintf(shapiro_text,
x,
shapiro_output$result,
shapiro_output$W,
shapiro_output$pvalue)
})
sapply(lvl(), function(x) {
shapiro_output <- selected_data()[which(selected_data()$group == x),"response"] |>
fct_shapiro()
sprintf(shapiro_text,
x,
shapiro_output$result,
shapiro_output$W,
shapiro_output$pvalue)
})
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
?need
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
?need
run_app()
devtools::load_all(".")
run_app()
tomato_yields[, .N, by = fertilizer]
tomato_yields[, .N, by = fertilizer][, min(N)]
devtools::load_all(".")
run_app()
lapply(tomato_yields, function(x) tomato_yields[which(tomato_yields$group == x)])
lapply(tomato_yields$group, function(x) tomato_yields[which(tomato_yields$group == x)])
lapply(level(fertilizer), function(x) tomato_yields[which(tomato_yields$fertilizer == x)])
lapply(levels(fertilizer), function(x) tomato_yields[which(tomato_yields$fertilizer == x)])
lapply(levels(tomato_yields$fertilizer), function(x) tomato_yields[which(tomato_yields$fertilizer == x)])
lapply(levels(tomato_yields$fertilizer), function(x) tomato_yields[which(tomato_yields$fertilizer == x)] |> length)
lapply(levels(tomato_yields$fertilizer), function(x) tomato_yields[which(tomato_yields$fertilizer == x)] |> length())
lapply(levels(tomato_yields$fertilizer), function(x) tomato_yields[which(tomato_yields$fertilizer == x)] |> nrow())
sapply(levels(tomato_yields$fertilizer), function(x) tomato_yields[which(tomato_yields$fertilizer == x)] |> nrow())
min(sapply(levels(tomato_yields$fertilizer), function(x) tomato_yields[which(tomato_yields$fertilizer == x)] |> nrow()))
devtools::load_all(".")
devtools::load_all(".")
rm(tomato_yields)
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
input_data()
selected_data()
selected_data()
input_data()
min(sapply(levels(tomato_yields$fertilizer), function(x) tomato_yields[tomato_yields$fertilizer == x] |> nrow()))
min(sapply(levels(tomato_yields$fertilizer), function(x) tomato_yields[tomato_yields$fertilizer == x]
)
)
sapply(levels(tomato_yields$fertilizer), function(x) tomato_yields[tomato_yields$fertilizer == x] |> nrow())
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
selected_data()
rownumber()
devtools::load_all(".")
run_app()
selected_data()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
?plotly::add_markers
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
keys()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
order(c("abc", "bec", "acc", "thc"))
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
?textAreaInput
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
system.file("rmd", "comparison_report.Rmd",
package = "comparat")
devtools::load_all(".")
run_app()
rv <- reactiveValues(a = 1, b = 2)
isolate(do.call("paste", rv))
rm(rv)
rv <- reactiveValues(a = 1, b = 2)
isolate(do.call("paste", rv))
isolate(do.call("paste", reactiveValuesToList(rv)))
do.call("paste", reactiveValuesToList(rv))
rm(rv)
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
tempdir()
devtools::load_all(".")
tempdir()
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
factor(c("aa", "ba", "ab"))
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
??codecov
covr::report()
devtools::load_all(".")
covr::report()
devtools::load_all(".")
covr::report()
devtools::load_all(".")
library(comparat)
devtools::load_all(".")
?usethis::use_import_from()
?usethis::use_package
devtools::load_all(".")
remove.packages("comparat")
library(comparat)
devtools::load_all(".")
format_sigfig(4.52)
s <- 3L
format_sigfig(4.52, s)
mean(rnorm(10) |> format_sigfig(s)
mean(rnorm(10)) |> format_sigfig(s)
devtools::load_all(".")
rowsummary_2samples(tomato_yields, "pounds", "fertilizer", "kg")$statistica
rowsummary_2samples(tomato_yields, "pounds", "fertilizer", "kg")
devtools::load_all(".")
rowsummary_2samples(tomato_yields, "pounds", "fertilizer", "kg")
rowsummary_2samples(tomato_yields, "pounds", "fertilizer", "kg")[]
load_all()
devtools::load_all()
run_app()
covrpage::covrpage()
install.packages("covrpage")
usethis::use_coverage()
devtools::build_readme()
??gfm
usethis::use_test("mod_aim01")
usethis::use_test("mod_loadfile02")
usethis::use_test("mod_compare03")
usethis::use_test("mod_compare031_2samples")
usethis::use_test("mod_report04")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::test()
devtools::check()
test_check()
?test_check()
devtools::load_all(".")
devtools::check()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(comparat)
remove.packages(c("bslib", "config", "data.table", "devtools", "DT", "future", "ggplot2", "golem", "plotly", "promises", "rmarkdown", "shiny", "shinyjs", "stats"))
install.packages(c("bslib", "config", "data.table", "devtools", "DT", "future", "ggplot2", "golem", "plotly", "promises", "rmarkdown", "shiny", "shinyjs", "stats"))
install.packages(c("bslib", "config", "data.table", "devtools", "DT", "future", "ggplot2", "golem", "plotly", "promises", "rmarkdown", "shiny", "shinyjs", "stats"))
install.packages(c("bslib", "config", "data.table", "devtools", "DT", "future", "ggplot2", "golem", "plotly", "promises", "rmarkdown", "shiny", "shinyjs", "stats"))
install.packages(c("bslib", "config", "data.table", "devtools", "DT", "future", "ggplot2", "golem", "plotly", "promises", "rmarkdown", "shiny", "shinyjs", "stats"))
install.packages(c("bslib", "config", "data.table", "devtools", "DT", "future", "ggplot2", "golem", "plotly", "promises", "rmarkdown", "shiny", "shinyjs", "stats"))
install.packages(c("bslib", "config", "data.table", "devtools", "DT", "future", "ggplot2", "golem", "plotly", "promises", "rmarkdown", "shiny", "shinyjs", "stats"))
devtools::load_all(".")
library(comparat)
?sd
?mean
devtools::load_all(".")
library(comparat)
devtools::load_all(".")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
library(comparat)
run_app()
devtools::load_all(".")
run_app()
library(comparat)
devtools::load_all(".")
run_app()
?app_sys()
??app_sys()
devtools::load_all(".")
library(comparat)
library(comparat)
run_app()
devtools::load_all(".")
run_app()
library(comparat)
run_app()
devtools::load_all(".")
run_app()
library(comparat)
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
bslib::page_navbar()
?bslib::page_navbar()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
library(data.table, lib.loc = "/usr/lib/R/library")
remove.packages("data.table", lib="/usr/lib/R/library")
library(data.table, lib.loc = "/usr/lib/R/library")
detach("package:data.table", unload = TRUE)
detach("data.table")
remove.packages("data.table", lib="/usr/lib/R/library")
install.packages(c("digest", "downlit", "jsonlite", "parallelly", "pkgbuild", "processx", "testthat", "usethis", "vctrs"))
devtools::load_all(".")
remove.packages("testthat", lib="/usr/lib/R/library")
lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""),
detach,
character.only = TRUE,
unload = TRUE)
library(tidyverse)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
install.packages("markdown")
??includeMarkdown
devtools::load_all(".")
?htmltools::includeMarkdown()
?shiny::includeMarkdown()
devtools::load_all(".")
library(comparat)
devtools::load_all(".")
usethis::use_package("markdown")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
data.table::fread(system.file("data-raw", "test_2values_unc.csv",
package = "comparat"), header = "auto", stringsAsFactors = TRUE)
devtools::load_all(".")
library(comparat)
.libPaths()
installed.packages()
devtools::load_all(".")
library(comparat)
