devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
sprintf("Hai fornito %s colonn%s di testo ma ne servono 2",
1,
ifelse(1 == 1, "a", "e"))
sprintf("Hai fornito %s colonn%s di testo ma ne servono 2",
1,
ifelse(2 == 1, "a", "e"))
sprintf("Hai fornito %s colonn%s di testo ma ne servono 2",
2,
ifelse(2 == 1, "a", "e"))
devtools::load_all(".")
sprintf("Hai fornito %s colonn%s di testo ma ne servono 2",
2,
ifelse(2 == 1, "a", "e"))
shiny::runApp()
sprintf("Hai fornito %s colonn%s di testo ma ne servono 2",
2,
ifelse(2 == 1, "a", "e"))
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
DT::renderDT()
?DT::renderDT()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
gitcreds::gitcreds_set()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
reactiveValues(NULL)
reactiveValues(aim = NULL)
reactiveValues(aim = NULL)$Values
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
?isTruthy
devtools::load_all(".")
shiny::runApp()
reactiveValues(aim = reactiveValues())
isTruthy(reactiveValues(aim = reactiveValues()))
is.null(reactiveValues(aim = reactiveValues()))
reactiveValues(aim = reactiveValues())
reactiveValues(aim = reactiveValues()) <- rnorm(2)
reactiveValues(aim = reactiveValues(aim = rnorm(2)))
reactiveValuesToList(aim = reactiveValues(aim = rnorm(2)))
devtools::load_all(".")
shiny::runApp()
?reactiveValuesToList
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
reactiveValuesToList(r$loadfile02$parlist)
isolate(reactiveValuesToList(r$loadfile02$parlist))
isolate(reactiveValuesToList(r$aim01$aim))
isolate(reactiveValuesToList(r$aim01$aim))
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
?levels
x <- as.list(rep(T,10))
names(x) <- rev(LETTERS[1:10])
true_order <- levels(factor(names(x),names(x)))
x
true_order
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
list(letters())
list(letters)
a <- list(letters)
names(a)
names(a) <- letters
names(a[[1]]) <- letters
a
a <- list(letters)
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
do.call("print", list(letters))
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
r$compare03
r$compare03[[input$parameter]]
r$compare03[[input$parameter]]$parameter
r$compare03[[input$parameter]]$data
r$compare03[[input$parameter]]$udm
r$loadfile02$data
r$loadfile02$data[[get(r$loadfile02$groupvar) == input$parameter]]
r$loadfile02$data[[r$loadfile02$groupvar == input$parameter]]
r$loadfile02$data[, r$loadfile02$groupvar == input$parameter]
r$loadfile02$data[, get(r$loadfile02$groupvar) == input$parameter]
r$loadfile02$data[get(r$loadfile02$groupvar) == input$parameter, ]
r$loadfile02$data[get(r$loadfile02$groupvar)]
r$loadfile02$data[r$loadfile02$groupvar]
r$loadfile02$groupvar
r$loadfile02$data[,r$loadfile02$groupvar]
r$loadfile02$data[,get(r$loadfile02$groupvar)]
r$loadfile02$data[get(r$loadfile02$groupvar) == "monte",]
r$loadfile02$data[get(r$loadfile02$parvar) == "primo",]
r$loadfile02$data[get(r$loadfile02$parvar) == input$parameter,]
r$loadfile02$data[get(r$loadfile02$parvar) == input$parameter]
r$loadfile02$data[[get(r$loadfile02$parvar) == input$parameter]]
r$loadfile02$data[get(r$loadfile02$parvar) == input$parameter]
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
r
r$aim01
r$aim01aim
r$aim01$aim
is.reactivevalues(r$aim01$aim)
is.reactivevalues(r$aim01)
is.reactivevalues(r)
is.reactivevalues(r$loadfile02)
r$loadfile02
r$loadfile02$data
is.reactivevalues(r$loadfile02$data)
is.reactivevalues(r$loadfile02$groupvar)
is.reactivevalues(r$compare03
)
r$compare03
r$compare03$myparameter
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
r$compare03
r$compare03[[r$compare03$myparameter]]
r$compare03[[r$compare03$myparameter]]$data
r$compare03$primo$data
r$compare03$myparameter
length(r$compare03$myparameter)
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
?observeEvent
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
shiny::runApp()
devtools::load_all(".")
fct_gesd(rnorm(20))
fct_gesd(rlnorm(20))
fct_gesd(rpois(20))
rpois(20)
rpois(20, 5)
fct_gesd(rpois(20, 5))
fct_gesd(rpois(20, 2))
rpois(20, 2)
rlnorm(20, 2)
rlnorm(20)
fct_gesd(rlnorm(20))
rlnorm(20)
devtools::load_all(".")
fct_gesd(rlnorm(20))
df
df
df_result
df_result
df_result
df_result
devtools::load_all(".")
fct_gesd(rlnorm(20))
df
df_result
df_result
o:m
0:m
df_result
df_result
df_result
text_result(df_result)
sum(df_result$outlier)
outlier_res[outlier == TRUE, I]
df_result[outlier == TRUE, I]
df_result[outlier == TRUE, "I"]
df_result[which(df_result$outlier == TRUE), I]
df_result[which(df_result$outlier == TRUE), "I"]
devtools::load_all(".")
fct_gesd(rlnorm(20))
fct_gesd(rlnorm(20))
fct_gesd(log(rlnorm(20)))
fct_gesd(log(rlnorm(20)))
fct_gesd(log(rlnorm(20)))
fct_gesd(log(rlnorm(20)))
fct_gesd(log(rlnorm(20)))
fct_gesd(log(rlnorm(20)))
fct_gesd(uniiso_16269_4_432)
fct_gesd(uranium_cps, 0.99)
devtools::load_all(".")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
input$confidence
input
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
id
session
View(input)
str(input)
output
input$alternative
unlist(input)
input[[1]]
r
r$compare03x
r$compare03
r$compare03$myparameter
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
input
input
input$parvar
observe(print(input$parvar))
NS(id, "data")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
?is.logical
c("response", "group", "outlier") %in% c("response", "group", "outlier")
stopifnot(c("response", "group", "outlier") %in% c("response", "group", "outlier"))
stopifnot(c("response", "group", "outlier") %in% c("response", "group", "outliers"))
stopifnot(c("response", "group", "outlier") %in% c("response", "group", "outlier"))
stopifnot(c("group", "outlier") %in% c("response", "group", "outlier"))
stopifnot(c("group", "outlier", "response") %in% c("response", "group", "outlier"))
a <- data.frame(key = 1:20, group = c(rep("bello", 10), rep("brutto", 10)), response = rnorm(20))
a
a <- data.frame(key = 1:20, group = c(rep("bello", 10), rep("brutto", 10)), response = rnorm(20), outlier = rep(FALSE, 20))
a
devtools::load_all(".")
boxplot_2samples(a, "gruppone", "misurone", "ug/l")
boxplot_2samples(a, "gruppone", "misurone", "ug/l")
devtools::load_all(".")
boxplot_2samples(a, "gruppone", "misurone", "ug/l")
devtools::load_all(".")
boxplot_2samples(a, "gruppone", "misurone", "ug/l")
devtools::load_all(".")
boxplot_2samples(a, "gruppone", "misurone", "ug/l")
devtools::load_all(".")
boxplot_2samples(a, "gruppone", "misurone", "ug/l")
devtools::load_all(".")
boxplot_2samples(a, "gruppone", "misurone", "ug/l")
devtools::load_all(".")
boxplot_2samples(a, "gruppone", "misurone", "ug/l")
devtools::load_all(".")
boxplot_2samples(a, "gruppone", "misurone", "ug/l")
devtools::load_all(".")
boxplot_2samples(a, "gruppone", "misurone", "ug/l")
